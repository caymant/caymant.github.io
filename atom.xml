<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>caymant</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/caymant/"/>
  <updated>2018-02-09T10:36:12.596Z</updated>
  <id>https://github.com/caymant/</id>
  
  <author>
    <name>xudong tao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ｈｅｘｏ</title>
    <link href="https://github.com/caymant/2018/02/07/hexo/"/>
    <id>https://github.com/caymant/2018/02/07/hexo/</id>
    <published>2018-02-07T11:33:43.000Z</published>
    <updated>2018-02-09T10:36:12.596Z</updated>
    
    <content type="html"><![CDATA[<p><font face="微软雅黑" color="black" size="6">Hexo</font><br>是这几天才接触的，折腾了两三天，还有好多可以优化的，百度并没有找到我用的主题的优化教程，等以后慢慢了解在慢慢优化，只要可以发论文自己记录一下假期刷算法题的体会就好。年后还需要买一个域名。facebook,和twitter还不能用，总之翻墙有关的现在都不能用，这里记录一下，还有弄一下评论区，以及搜索的那个小Bug。<br><br>在hexo中如果所修改的文件是Blog文件夹下面的，更改完要重新部署一下，在博客目录文件下面Git Bash:  hexo clean , hexo genarate, hexo deploy。就部署好了。可以hexo s开启服务后本地浏览。如果hexo更改的是特定的主题文件夹下面的内容，直接hexo s刷新界面就好，这块我也有点不确定，可能直接刷新界面就好。都不用重新启动。D:\blog\source这个文件夹下面放的是一些整体配置文章有关的，其实我现在感觉设置完主题之后大部分的操作就在这个文件夹下面就是。附加一个就是项目到底是干嘛的现在还不是很清楚。慢慢学习吧！<br>自己花费很多时间就为了有一个自己的博客，这几天都花费在配置博客上面了，并没有学习什么新的知识，算法题的计划得赶紧赶上。有时候充实起来，真的不用想前途。管他干嘛。学习的状态真的是还有点沉醉，昨天不知不觉就零点了。总之，不要忘了初心。建立这个博客是给自己一个经常总结自己的地方，希望自己不断学习，不断总结。１９年要加油啊！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font face=&quot;微软雅黑&quot; color=&quot;black&quot; size=&quot;6&quot;&gt;Hexo&lt;/font&gt;&lt;br&gt;是这几天才接触的，折腾了两三天，还有好多可以优化的，百度并没有找到我用的主题的优化教程，等以后慢慢了解在慢慢优化，只要可以发论文自己记录一下假期刷算法题的体会就好
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TCP/IP三次挥手四次分手</title>
    <link href="https://github.com/caymant/2018/02/07/TCP%20IP/"/>
    <id>https://github.com/caymant/2018/02/07/TCP IP/</id>
    <published>2018-02-07T11:33:43.000Z</published>
    <updated>2018-02-11T04:48:38.971Z</updated>
    
    <content type="html"><![CDATA[<p>###TCP协议的特点:<br>    TCP是在不可靠的TP层之上实现的可靠的数据传输协议，主要解决传输的可靠、有序、无丢失和不重复的问题。TCP是TCP/IP体系中一个非常复杂的协议，主要特点有：<br>1)TCP是面向连接的传输层协议。<br>2）每一条TCP连接只能有两个端点，每一条TCP连接只能是点对点（一对一的）。<br>3）TCP提供可靠的交付服务，保证传送的数据无差错，不丢失，不重复且有序。TCP提供全双工通信。<br>4）TCP是面向字节流的，TCP把应用程序交下来的数据看成仅仅是一连串的无结构的字节流。</p><p>###TCP连接管理：<br>每一个TCP的连接都有三个阶段：连接简历，数据传送和连接释放。TCP连接的端口叫做套接字，socket，端口拼接到IP地址即构成了套接字。每一条TCP连接唯一的被通信两端的两个端点（即两个套接字）所确定。TCP连接的建立采用客户/服务器模式，主动的叫客户机，被动的叫服务器。!<img src="https://i.imgur.com/Zyzmqqr.jpg" alt=""><br>总结如下：<br>（1）连接建立 分为三步<br>1.SYN=1，seq=x.<br>2.SYN=1，ACK=1，seq=y,ack=x+1.<br>3.ACK=1,seq=x+1,ack=y+1.<br>(2)连接释放 分为四步<br>1.FIN=1，seq=u.<br>2.ACK=1,seq=v,ack=u+1.<br>3.FIN=1,ACK=1,SEQ=W,ACK=U+1.<br>4.ACK=1,SEQ=U+1,ACK=W+1.  (注意ACK,SYN,FIN一定等于1)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###TCP协议的特点:&lt;br&gt;    TCP是在不可靠的TP层之上实现的可靠的数据传输协议，主要解决传输的可靠、有序、无丢失和不重复的问题。TCP是TCP/IP体系中一个非常复杂的协议，主要特点有：&lt;br&gt;1)TCP是面向连接的传输层协议。&lt;br&gt;2）每一条TCP连接只能
      
    
    </summary>
    
    
  </entry>
  
</feed>
